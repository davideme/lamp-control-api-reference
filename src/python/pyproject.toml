[tool.poetry]
name = "lamp-control-api"
version = "0.1.0"
description = "Lamp Control API implementation with REST, GraphQL, and gRPC interfaces"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "lamp_control"}]

[tool.poetry.dependencies]
python = "^3.12.9"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.25"}
strawberry-graphql = {extras = ["fastapi"], version = "^0.219.0"}
grpcio = "^1.60.0"
grpcio-tools = "^1.60.0"
structlog = "^24.1.0"
pydantic = {extras = ["email"], version = "^2.6.0"}
alembic = "^1.13.1"
asyncpg = "^0.29.0"
aiomysql = "^0.2.0"
motor = "^3.3.2"
redis = {extras = ["hiredis"], version = "^5.0.1"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
opentelemetry-instrumentation-fastapi = "^0.43b0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
black = "^24.1.0"
ruff = "^0.2.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
httpx = "^0.26.0"
asgi-lifespan = "^2.1.0"
faker = "^22.5.0"
factory-boy = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=lamp_control --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto" 