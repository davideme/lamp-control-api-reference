/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/lamps': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List all lamps */
    get: operations['listLamps'];
    put?: never;
    /** Create a new lamp */
    post: operations['createLamp'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/lamps/{lampId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get a specific lamp */
    get: operations['getLamp'];
    /** Update a lamp's status */
    put: operations['updateLamp'];
    post?: never;
    /** Delete a lamp */
    delete: operations['deleteLamp'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Lamp: {
      /**
       * Format: uuid
       * @description Unique identifier for the lamp
       */
      id: string;
      /** @description Whether the lamp is turned on (true) or off (false) */
      status: boolean;
      /**
       * Format: date-time
       * @description Timestamp when the lamp was created
       */
      createdAt: string;
      /**
       * Format: date-time
       * @description Timestamp when the lamp was last updated
       */
      updatedAt: string;
    };
    LampCreate: {
      /** @description Initial status of the lamp (on/off) */
      status: boolean;
    };
    LampUpdate: {
      /** @description New status of the lamp (on/off) */
      status: boolean;
    };
    Error: {
      /**
       * @description Error type identifier
       * @example INVALID_ARGUMENT
       */
      error: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  listLamps: {
    parameters: {
      query?: {
        cursor?: string | null;
        pageSize?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description A list of lamps with pagination */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            data: components['schemas']['Lamp'][];
            nextCursor?: string | null;
            hasMore: boolean;
          };
        };
      };
      /** @description Not Modified */
      304: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid request parameters */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  createLamp: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['LampCreate'];
      };
    };
    responses: {
      /** @description Lamp created successfully */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Lamp'];
        };
      };
      /** @description Invalid request data */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getLamp: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        lampId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Lamp details */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Lamp'];
        };
      };
      /** @description Not Modified */
      304: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid lamp ID format */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Lamp not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  updateLamp: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        lampId: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['LampUpdate'];
      };
    };
    responses: {
      /** @description Lamp updated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Lamp'];
        };
      };
      /** @description Invalid request data or lamp ID format */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Lamp not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  deleteLamp: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        lampId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Lamp deleted successfully */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Invalid lamp ID format */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Lamp not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
