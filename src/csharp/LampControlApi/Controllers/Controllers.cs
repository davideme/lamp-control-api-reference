//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

namespace LampControlApi.Controllers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public interface IController
    {

        /// <summary>
        /// List all lamps
        /// </summary>

        /// <returns>A list of lamps</returns>

        System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Lamp>> ListLampsAsync();

        /// <summary>
        /// Create a new lamp
        /// </summary>


        /// <returns>Lamp created successfully</returns>

        System.Threading.Tasks.Task<Lamp> CreateLampAsync(LampCreate body);

        /// <summary>
        /// Get a specific lamp
        /// </summary>


        /// <returns>Lamp details</returns>

        System.Threading.Tasks.Task<Lamp> GetLampAsync(string lampId);

        /// <summary>
        /// Update a lamp's status
        /// </summary>


        /// <returns>Lamp updated successfully</returns>

        System.Threading.Tasks.Task<Lamp> UpdateLampAsync(string lampId, LampUpdate body);

        /// <summary>
        /// Delete a lamp
        /// </summary>


        /// <returns>Lamp deleted successfully</returns>

        System.Threading.Tasks.Task DeleteLampAsync(string lampId);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("v1")]

    public partial class Controller : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        private IController _implementation;

        public Controller(IController implementation)
        {
            _implementation = implementation;
        }

        /// <summary>
        /// List all lamps
        /// </summary>
        /// <returns>A list of lamps</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("lamps")]
        public System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Lamp>> ListLamps()
        {

            return _implementation.ListLampsAsync();
        }

        /// <summary>
        /// Create a new lamp
        /// </summary>
        /// <returns>Lamp created successfully</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("lamps")]
        public System.Threading.Tasks.Task<Lamp> CreateLamp([Microsoft.AspNetCore.Mvc.FromBody] LampCreate body)
        {

            return _implementation.CreateLampAsync(body);
        }

        /// <summary>
        /// Get a specific lamp
        /// </summary>
        /// <returns>Lamp details</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("lamps/{lampId}")]
        public System.Threading.Tasks.Task<Lamp> GetLamp(string lampId)
        {

            return _implementation.GetLampAsync(lampId);
        }

        /// <summary>
        /// Update a lamp's status
        /// </summary>
        /// <returns>Lamp updated successfully</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("lamps/{lampId}")]
        public System.Threading.Tasks.Task<Lamp> UpdateLamp(string lampId, [Microsoft.AspNetCore.Mvc.FromBody] LampUpdate body)
        {

            return _implementation.UpdateLampAsync(lampId, body);
        }

        /// <summary>
        /// Delete a lamp
        /// </summary>
        /// <returns>Lamp deleted successfully</returns>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("lamps/{lampId}")]
        public System.Threading.Tasks.Task DeleteLamp(string lampId)
        {

            return _implementation.DeleteLampAsync(lampId);
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Lamp
    {
        /// <summary>
        /// Unique identifier for the lamp
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Whether the lamp is turned on (true) or off (false)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public bool Status { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LampCreate
    {
        /// <summary>
        /// Initial status of the lamp (on/off)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public bool Status { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LampUpdate
    {
        /// <summary>
        /// New status of the lamp (on/off)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public bool Status { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore 108
#pragma warning restore 114
#pragma warning restore 472
#pragma warning restore 612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625