name: Kotlin CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/kotlin/**'
      - '.github/workflows/kotlin-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/kotlin/**'
      - '.github/workflows/kotlin-ci.yml'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      issues: write
      contents: write
      pull-requests: write
    defaults:
      run:
        working-directory: src/kotlin

    strategy:
      matrix:
        java-version: [21]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Compile Kotlin code
      run: ./gradlew compileKotlin compileTestKotlin

    - name: Run tests with coverage
      run: ./gradlew test jacocoTestReport
      continue-on-error: false

    - name: Verify code coverage threshold
      run: ./gradlew jacocoTestCoverageVerification
      continue-on-error: false

    - name: Check code formatting (ktlint)
      run: ./gradlew ktlintCheck
      continue-on-error: true

    - name: Run detekt static analysis
      run: ./gradlew detekt
      continue-on-error: true

    - name: Build application
      run: ./gradlew build

    - name: Generate test reports
      run: ./gradlew test
      if: always()

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: kotlin-test-results
        path: src/kotlin/build/reports/tests/

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: kotlin-coverage-reports
        path: src/kotlin/build/reports/jacoco/

    - name: Create Pull Request for coverage summary
      if: github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: "chore: update kotlin coverage summary"
        title: "chore: update kotlin coverage summary"
        branch: "ci/kotlin-coverage-update"

  code-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/kotlin

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Run ktlint formatting check
      run: ./gradlew ktlintCheck
      continue-on-error: true

    - name: Run detekt analysis
      run: ./gradlew detekt
      continue-on-error: true

    - name: Generate ktlint report
      run: ./gradlew ktlintFormat
      if: always()

    - name: Generate detekt report
      run: ./gradlew detekt
      if: always()

    - name: Upload code quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: kotlin-code-quality-reports
        path: |
          src/kotlin/build/reports/ktlint/
          src/kotlin/build/reports/detekt/
