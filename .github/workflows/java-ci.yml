name: Java CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/java/**'
      - '.github/workflows/java-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/java/**'
      - '.github/workflows/java-ci.yml'
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'src/java/pom.xml'
    
    - name: Check code formatting
      working-directory: ./src/java
      run: mvn spotless:check
    
    - name: Compile code
      working-directory: ./src/java
      run: mvn compile test-compile
    
    - name: Run SpotBugs
      working-directory: ./src/java
      run: mvn spotbugs:check
    
    - name: Run PMD
      working-directory: ./src/java
      run: mvn pmd:check
    
    - name: Run Checkstyle
      working-directory: ./src/java
      run: mvn checkstyle:check
    
    - name: Run tests with coverage
      working-directory: ./src/java
      run: mvn test jacoco:report
    
    - name: Generate SpotBugs report
      working-directory: ./src/java
      run: mvn spotbugs:spotbugs
      if: always()
    
    - name: Generate PMD report
      working-directory: ./src/java
      run: mvn pmd:pmd
      if: always()
    
    - name: Generate Checkstyle report
      working-directory: ./src/java
      run: mvn checkstyle:checkstyle
      if: always()

    - name: Commit coverage summary
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add target/site/jacoco/jacoco.xml || true
        git commit -m "chore: update Java coverage summary" || exit 0
        git push

  schemathesis-testing:
    name: Schemathesis API Testing
    runs-on: ubuntu-latest
    needs: [code-quality]
    defaults:
      run:
        working-directory: src/java

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'src/java/pom.xml'

    - name: Build application
      run: mvn compile -q

    - name: Start API in background
      run: |
        mvn spring-boot:run -Dspring-boot.run.arguments="--server.port=8080" -q &
        echo $! > api.pid
        sleep 15

    - name: Wait for API to be ready
      run: |
        timeout 30 bash -c 'until curl -f -s http://localhost:8080/v1/lamps > /dev/null; do sleep 1; done'
        echo "API is ready!"

    - name: Run Schemathesis tests
      uses: schemathesis/action@v2
      with:
        schema: docs/api/openapi.yaml
        base-url: http://localhost:8080/v1
        max-examples: 100
        checks: status_code_conformance,not_a_server_error,response_schema_conformance
        args: '--report junit --report-junit-path schemathesis-report.xml'

    - name: Stop API
      run: |
        if [ -f api.pid ]; then
          kill $(cat api.pid) || true
          rm api.pid
        fi

    - name: Upload Schemathesis report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: java-schemathesis-report
        path: |
          schemathesis-report.xml
        retention-days: 30

    - name: Check Schemathesis results
      run: |
        if [ -f schemathesis-report.xml ]; then
          # Check if there were any failures in the XML report
          if grep -q 'failures="[1-9]' schemathesis-report.xml || grep -q 'errors="[1-9]' schemathesis-report.xml; then
            echo "❌ Schemathesis found API issues!"
            echo "Check the uploaded report for details."
            exit 1
          else
            echo "✅ Schemathesis tests passed!"
          fi
        else
          echo "⚠️ No Schemathesis report found"
        fi

  docker-build-test:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    needs: [code-quality]
    defaults:
      run:
        working-directory: src/java

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t java-lamp-api:test .

    - name: Test Docker image
      run: |
        # Start the container in background
        docker run -d --name test-container -p 8080:8080 java-lamp-api:test
        
        # Wait for the application to start
        echo "Waiting for application to start..."
        timeout 120 bash -c 'until curl -f -s http://localhost:8080/v1/lamps > /dev/null 2>&1; do sleep 2; done'
        
        # Test the API endpoint
        echo "Testing API endpoint..."
        curl -f -s http://localhost:8080/v1/lamps
        
        # Check application logs
        echo "Application logs:"
        docker logs test-container
        
        echo "✅ Docker image test passed!"

    - name: Cleanup
      if: always()
      run: |
        docker stop test-container || true
        docker rm test-container || true
        docker rmi java-lamp-api:test || true
